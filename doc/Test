using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
//1.首先导入需要的命名空间 
using System.Runtime.InteropServices; //调用WINDOWS API函数时要用到 
using Microsoft.Win32; //写入注册表时要用到
using System.Windows.Forms;

namespace WINUserControl
{


    public class Test
    {
        static KeyboardHook k_hook;
        //0.准备工作 
        //把上面的工具类添加到项目中

        public static void myInit()
        {
            //2.安装Hook，在程序入口中写上下面的代码（本例中用了WinForm，在Form的构造方法中安装Hook即可） 
            //安装键盘钩子 
            k_hook = new KeyboardHook();
            k_hook.KeyDownEvent += new KeyEventHandler(hook_KeyDown);//钩住键按下 
            k_hook.Start();//安装键盘钩子


        }


        public static void unStall()
        {
            if (k_hook != null)
                k_hook.Stop();
        }

        static DateTime time;
        static Boolean isFirst = true;

        //3.判断输入键值（实现KeyDown事件） 
        private static void hook_KeyDown(object sender, KeyEventArgs e)
        {
            //判断按下的键（Alt + A） 
            //if (e.KeyValue == (int)Keys.A && (int)Control.ModifierKeys == (int)Keys.Alt)
            //{
            //    System.Windows.Forms.MessageBox.Show("按下了指定快捷键组合");
            //}
            if (!isFirst)
            {
                double span = (DateTime.Now - time).TotalMilliseconds;
                if (span > 150d)
                {
                    Console.WriteLine("" + (Keys)e.KeyValue + " " + span);
                    time = DateTime.Now;
                }
            }
            else
            {
                Console.WriteLine("" + (Keys)e.KeyValue);
                time = DateTime.Now;
                isFirst = false;
            }






        }
        //注意几种不同的键值判断： 
        //1>.单普通键（例如A） 
        //2>.单控制键+单普通键（例如Ctrl+A） 
        //3>.多控制键+单普通键（例如Ctrl+Alt+A） 
        //上面的代码中演示了2，其它情况以此类推，无非就是添几个条件再&&起来就好

    }

}
